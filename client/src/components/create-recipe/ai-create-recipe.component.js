import Button from 'react-bootstrap/Button';
import Form from 'react-bootstrap/Form';
import { OpenAI } from 'openai';
import { useState } from 'react';
import { useEffect } from 'react';
import UserCreateRecipe from './user-create-recipe.coponent';
import axios from 'axios';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';




const AICreateRecipe = () => {
    console.log("ai recipe is rendring")
    const [urlFromUser, setUrlFromUser] = useState('')
    const [aiRecipe, setAIRecipe] = useState({name: '', ingredients: [], steps: []})
    const [loading, setLoading] = useState(false)

    

    // Function to handle input change
    const handleInputChange = (e) => {
        // Update the state with the new input value
        setUrlFromUser(e.target.value);
    };

    const handleSubmit = (e) => {
        e.preventDefault()
        console.log('before toast working?')
        toast.info('AI is processing your recipe...');
        console.log('after toast working?')
        axios.post('http://localhost:5001/api/summerize_url', {url: urlFromUser})
        .then((res) => {
            console.log('response data', res.data)
            //validate the structure of the response
            if (
                res.data &&
                'name' in res.data &&
                'ingredients' in res.data &&
                'steps' in res.data &&
                typeof res.data.name === 'string' &&
                Array.isArray(res.data.ingredients) &&
                Array.isArray(res.data.steps)
            ) {

                const {name, ingredients, steps} = res.data
                setAIRecipe({name, ingredients, steps})
            } else {
                throw new Error('Invalid data generated by AI')
            }
        })
        .catch((error) => {
            console.log('Error fetching data:', error.message)
            window.alert('AI could not generate your recipe. Please try another URL.')

        }
        )
        
    }

    return (
        <>
            <ToastContainer />
            <form className="mb-3" onSubmit={handleSubmit}>
                <label>Create a Recipe by AI</label>
                <input
                    type="text"
                    placeholder="https://..."
                    name="urlFromUser"
                    value={urlFromUser}
                    onChange={handleInputChange}
                    style={{ width: '90%' }}
                />
                <button type="submit"
                    className="btn btn-primary">Submit URL</button>
            </form>
            <UserCreateRecipe aiRecipe={aiRecipe}/>

        </>
    )

    

}

export default AICreateRecipe;